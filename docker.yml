
# Docker automated build
#
# This will run when:
# - when new code is pushed to main/develop to push the tags
#   latest and develop
# - when a pull request is created and updated to make sure the
#   Dockerfile is still valid.
# - when a new semantic version is released to push tags matching
#   the version number. e.g. 1.0.0 -> `1`, `1.0`, and `1.0.0`
# This will use the credentials of the GitHub user that runs the pipeline

name: docker-build

on:
  # Trigger the workflow when new commits are pushed to the "main" branch
  push:
    branches:
      - main

  # Trigger the workflow when a pull request is created or updated
  pull_request:

  # Trigger the workflow on release activity
  release:
    # Only use the types keyword to narrow down the activity types that will trigger your workflow.
    types:
      - published
      - edited
      - created


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Gather Docker metadata based on trigger type, org, repo, sha
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to GHCR.io
        uses: docker/login-action@v3
        with:
          # Authenticate using the built-in GITHUB_TOKEN
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # Path to your Dockerfile context
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
