services:
  traefik:
    container_name: sdoh-traefik
    image: traefik:v3.0
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"

  solr:
    container_name: sdoh-solr
    image: 'solr:9.7.0-slim'
    user: root
    restart: unless-stopped
    ports:
    - 8983:8983
    environment:
      - SOLR_CORE_STAGE=${SOLR_CORE_STAGE:-blacklight-core-stage}
      - SOLR_CORE_PROD=${SOLR_CORE_PROD:-blacklight-core-prod}
    healthcheck:
      test: ["CMD-SHELL", "bin/solr status"]
      interval: 10s
      retries: 5
      start_period: 120s
      timeout: 10s
    volumes:
      - ./solr/web.xml:/opt/solr-9.7.0-slim/server/solr-webapp/webapp/WEB-INF/web.xml
      - ./solr/solr.in.sh:/etc/default/solr.in.sh
      - ./solr:/solr-configset
      - ./solr-data:/var/solr/data
    command: 
      - 'bash'
      - '-c'
      - |
        # Create directories for both cores dynamically (as root)
        mkdir -p /var/solr/data/$SOLR_CORE_STAGE/data
        mkdir -p /var/solr/data/$SOLR_CORE_PROD/data
        mkdir -p /var/solr/logs
        chown -R solr:solr /var/solr/data
        chown -R solr:solr /var/solr/logs
        
        # Copy configset files to core directories
        cp -r /solr-configset/* /var/solr/data/$SOLR_CORE_STAGE/
        cp -r /solr-configset/* /var/solr/data/$SOLR_CORE_PROD/
        chown -R solr:solr /var/solr/data
        
        # Start Solr as solr user
        exec su solr -c "
          # Start Solr in background
          /opt/solr/bin/solr start -f &
          SOLR_PID=\$!
          
          # Wait for Solr to be ready
          echo 'Waiting for Solr to start...'
          until curl -s http://localhost:8983/solr/admin/cores?action=STATUS >/dev/null 2>&1; do
            sleep 2
          done
          
          # Create staging core
          echo 'Creating staging core...'
          /opt/solr/bin/solr create_core -c $SOLR_CORE_STAGE
          
          # Create production core
          echo 'Creating production core...'
          /opt/solr/bin/solr create_core -c $SOLR_CORE_PROD
          
          # Wait for the background Solr process
          wait \$SOLR_PID
        "

  manager:
    container_name: sdoh-manager
    image: herop/sdoh-metadata-manager
    build:
      context: .
    restart: unless-stopped
    depends_on:
      solr:
        condition: service_healthy
        restart: true
    env_file: .env
    environment:
      - PYTHONPATH=/home/herop
    working_dir: /home/herop
    volumes:
      - ./manager:/home/herop/manager
    expose:
    - 8000

volumes:
  letsencrypt:
